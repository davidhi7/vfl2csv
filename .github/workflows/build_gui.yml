name: Build GUI for all platforms

on:
  workflow_dispatch:
  push:
    branches:
      - 'main'

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ windows-latest, ubuntu-latest, macos-latest ]
    
    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Check-out repository
        uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          architecture: 'x64'
          cache: 'pip'
          cache-dependency-path: |
            requirements.txt
            requirements-build.txt

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Install build dependencies
        run: pip install -r requirements-build.txt

      - name: Build artifacts
        if: matrix.os != 'macos-latest'
        run: >
          python -m nuitka --standalone --assume-yes-for-downloads --disable-console --follow-imports
          --enable-plugin=pyside6 --enable-plugin=multiprocessing vfl2csv_gui

      - name: Build artifacts (macOS specific)
        if: matrix.os == 'macos-latest'
        # disabling the console leads to difficulties
        # ("FATAL: Error, cannot disable console unless also using '--macos-create-app-bundle'.")
        run: >
          python -m nuitka --standalone --assume-yes-for-downloads --follow-imports
          --enable-plugin=pyside6 --enable-plugin=multiprocessing vfl2csv_gui

      - name: Run integration tests on artifact (Windows)
        if: matrix.os == 'windows-latest'
        run: >
          python -m tests.integration_tests --executable '.\vfl2csv_gui.dist\vfl2csv_gui.exe --cli'

      - name: Run integration tests on artifact (macOS)
        if: matrix.os == 'macos-latest'
        run: >
          python -m tests.integration_tests --executable './vfl2csv_gui.dist/vfl2csv_gui.bin --cli'

      - name: Run integration tests on artifact (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: >
          python -m tests.integration_tests --executable './vfl2csv_gui.dist/vfl2csv_gui.bin --cli'

      - name: Upload Artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: ${{ runner.os }} Build
          path: 'vfl2csv_gui.dist/'
